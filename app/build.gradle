apply plugin: 'com.android.application'

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        applicationId "com.yueqiu"
        minSdkVersion 15
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    // 由于我们需要使用微信的分享接口，所以我们需要在这里提供我们自己的KeyStore，而不是默认的keyStore
//    signingConfigs {
//        debug {
//            storeFile file("")
//        }
//    }


    task copyNativeLibs(type: Copy) {
        from fileTree(dir: 'libs', include: '*/*.so' )  into  'build/native-libs'
    }
    tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn copyNativeLibs }

    clean.dependsOn 'cleanCopyNativeLibs'

    tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
        pkgTask.jniFolders = new HashSet()
        pkgTask.jniFolders.add(new File(projectDir, 'build/native-libs'))
        println pkgTask.jniFolders
    }
//    task nativeLibsToJar(type: Jar, description: 'create a jar archive of the native libs') {
//        destinationDir file("$buildDir/native-libs")
//        baseName 'native-libs'
//        from fileTree(dir: 'libs', include: '**/*.so')
//        into 'lib/'
//    }
//
//    tasks.withType(Compile) {
//        compileTask -> compileTask.dependsOn(nativeLibsToJar)
//    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //    compile 'com.nineoldandroids:library:2.4.0'
    compile project(':datetimepicker-library')
    compile project(':emoji-library')
    compile 'com.android.support:support-v13:21.0.3'
    compile 'com.mcxiaoke.volley:library:1.0.10'

}
